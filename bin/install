#!/usr/bin/env bash

# global for error reporting
ASDF_MAVEN_ERROR=""

# Download Maven source from Apache, build, copy files and cleanup.
install_maven() {
	local version=$1
	local destdir=$2

	get_maven $version "$destdir"
	[[ -z "$ASDF_MAVEN_ERROR" ]] || return

	build_copy_cleanup $version "$destdir"
}

download_file() {
	local url=$1
	local dest=$2

	curl -fLC - --retry 3 --retry-delay 3 -o "$dest" "$url"
	return $?
}

# Download Maven source from Apache
get_maven() {
	local version=$1
	local destdir=$2

	local major
	major=$(echo "$version" | cut -d '.' -f 1)

	if [ -n "$MAVEN_MIRROR" ]; then
		local mirror_url="$MAVEN_MIRROR/maven-$major/$version/binaries/apache-maven-$version-bin.tar.gz"
		if [ "$(download_file "$mirror_url" "$destdir/$version.tar.gz")" -eq 0 ]; then
			return 0
		else
			echo "Warn: Failed to download from MAVEN_MIRROR=$MAVEN_MIRROR, falling back to official sources..."
		fi
	fi

	local main_url="https://dlcdn.apache.org/maven/maven-$major/$version/binaries/apache-maven-$version-bin.tar.gz"
	local archive_url="https://archive.apache.org/dist/maven/maven-$major/$version/binaries/apache-maven-$version-bin.tar.gz"

	if [[ "$version" == *SNAPSHOT ]]; then
		local snapshot_url="https://repository.apache.org/service/local/artifact/maven/redirect?r=snapshots&g=org.apache.maven&a=apache-maven&v=$version&e=tar.gz&c=bin"
		download_file "$snapshot_url" "$destdir/$version.tar.gz"
		if [ $? -ne 0 ]; then
			ASDF_MAVEN_ERROR="Could not download SNAPSHOT version $version from $snapshot_url. Perhaps the version of Maven you're trying to install does not exist"
			return 1
		fi
		return 0
	fi

	# Attempt to download from the main URL
	if [ "$(download_file "$main_url" "$destdir/$version.tar.gz")" -ne 0 ]; then
		# If the download fails, attempt to download from the archive URL
		if [ "$(download_file "$archive_url" "$destdir/$version.tar.gz")" -ne 0 ]; then
			ASDF_MAVEN_ERROR="Could not download Maven $version from either the main or archive URL. Perhaps the version of Maven you're trying to install does not exist"
			return 1
		fi
	fi
}

# Build Maven, copy files and cleanup.
build_copy_cleanup() {
	local version=$1
	local destdir=$2

	local origin=$(pwd)
	cd "$destdir"; {
		tar xzvf $version.tar.gz
		rm $version.tar.gz

		mv apache-maven-$version/* .
		rmdir apache-maven-$version
	}
	cd "$origin"
}

#
# MAIN
#
install_maven $ASDF_INSTALL_VERSION "$ASDF_INSTALL_PATH"

if [ -n "$ASDF_MAVEN_ERROR" ]; then
	echo "ERROR: $ASDF_MAVEN_ERROR." > /dev/stderr
	unset ASDF_MAVEN_ERROR
	exit 1
fi
